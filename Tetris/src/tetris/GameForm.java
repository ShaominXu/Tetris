
package tetris;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author xusm
 */
public class GameForm extends JFrame {
    
    GameArea gameArea;
    Thread gameThread;
    
    boolean paused = false;


    public GameForm() {
        super("TETRIS");
        
        initComponents();
        
        gameArea = new GameArea(gameAreaPanel, 10);
        this.add(gameArea);
        
        initControls();
        
    }
    
    private void initControls(){
        InputMap inputMap = this.getRootPane().getInputMap();
        ActionMap actionMap = this.getRootPane().getActionMap();
        
        inputMap.put(KeyStroke.getKeyStroke("RIGHT"), "right");
        inputMap.put(KeyStroke.getKeyStroke("LEFT"), "left");
        inputMap.put(KeyStroke.getKeyStroke("UP"), "up");
        inputMap.put(KeyStroke.getKeyStroke("DOWN"), "down");
        inputMap.put(KeyStroke.getKeyStroke("ENTER"), "enter");
        
        actionMap.put("right", new AbstractAction(){
            @Override
            public void actionPerformed(ActionEvent e){
                if (paused) return;
                gameArea.moveBlockRight();
                Tetris.playMove();
            }
        });
        
        actionMap.put("left", new AbstractAction(){
            @Override
            public void actionPerformed(ActionEvent e){
                if (paused) return;
                gameArea.moveBlockLeft();
                Tetris.playMove();
            }
        });
        
        actionMap.put("up", new AbstractAction(){
            @Override
            public void actionPerformed(ActionEvent e){
                if (paused) return;
                gameArea.rotateBlock();
                Tetris.playRotate();
            }
        });
        
        actionMap.put("down", new AbstractAction(){
            @Override
            public void actionPerformed(ActionEvent e){
                if (paused) return;
                gameArea.dropBlock();
                Tetris.playHardDrop();
            }
        });

        actionMap.put("enter", new AbstractAction(){
            @Override
            public void actionPerformed(ActionEvent e){
                paused = !paused;
                if (paused) {
                    pausedDisplay.setVisible(true);
                    Tetris.playGamePause();
                }
                else{
                    pausedDisplay.setVisible(false);  
                }
                
            }
        });
        
    }
    
    public void startGame(){
        paused = false;
        pausedDisplay.setVisible(false);
        gameArea.initBackground();
        GameTask gameTask = new GameTask(gameArea, this);
        gameThread =  new Thread(gameTask);
        gameThread.start();
        
        //ControlTask controlTask = new ControlTask(this);
        //new Thread(controlTask).start();
        
    }

    
    public void updateScore(int score){
        int lenght = Integer.toString(score).length();
        String zeroText = "";
        for ( int i = 0; i < 7 - lenght; i++) zeroText += "0";
        scoreDisplay.setText(zeroText + score);
    }
    
    public void updateLine(int line){
        int lenght = Integer.toString(line).length();
        String zeroText = "";
        for ( int i = 0; i < 4 - lenght; i++) zeroText += "0";
        lineDisplay.setText(zeroText + line);
    }
    
    public void updateLevel(int level){
        int lenght = Integer.toString(level).length();
        String zeroText = "";
        for ( int i = 0; i < 2 - lenght; i++) zeroText += "0";
        levelDisplay.setText(zeroText + level);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameAreaPanel = new javax.swing.JPanel();
        pausedDisplay = new javax.swing.JLabel();
        scoreDisplay = new javax.swing.JLabel();
        levelDisplay = new javax.swing.JLabel();
        lineDisplay = new javax.swing.JLabel();
        buttonQuit = new javax.swing.JButton();
        lineLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        gameAreaPanel.setBackground(new java.awt.Color(0, 0, 0));
        gameAreaPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gameAreaPanel.setPreferredSize(new java.awt.Dimension(200, 400));

        pausedDisplay.setForeground(java.awt.Color.white);
        pausedDisplay.setText("PAUSED");

        javax.swing.GroupLayout gameAreaPanelLayout = new javax.swing.GroupLayout(gameAreaPanel);
        gameAreaPanel.setLayout(gameAreaPanelLayout);
        gameAreaPanelLayout.setHorizontalGroup(
            gameAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameAreaPanelLayout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(pausedDisplay)
                .addGap(74, 74, 74))
        );
        gameAreaPanelLayout.setVerticalGroup(
            gameAreaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameAreaPanelLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(pausedDisplay)
                .addContainerGap(226, Short.MAX_VALUE))
        );

        scoreDisplay.setText("0000000");

        levelDisplay.setText("01");

        lineDisplay.setText("0000");

        buttonQuit.setText("QUIT");
        buttonQuit.setFocusable(false);
        buttonQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonQuitActionPerformed(evt);
            }
        });

        lineLabel.setText("LINE");

        scoreLabel.setText("SCORE");

        jLabel1.setText("LEVEL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lineDisplay)
                            .addComponent(lineLabel))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scoreDisplay)
                                .addGap(45, 45, 45)
                                .addComponent(levelDisplay)))
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(gameAreaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonQuit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scoreLabel)
                    .addComponent(lineLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levelDisplay)
                    .addComponent(lineDisplay)
                    .addComponent(scoreDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameAreaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonQuitActionPerformed

        gameThread.interrupt();
        this.setVisible(false);
        Tetris.showStratup();
    }//GEN-LAST:event_buttonQuitActionPerformed

    
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameForm().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonQuit;
    private javax.swing.JPanel gameAreaPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel levelDisplay;
    private javax.swing.JLabel lineDisplay;
    private javax.swing.JLabel lineLabel;
    private javax.swing.JLabel pausedDisplay;
    private javax.swing.JLabel scoreDisplay;
    private javax.swing.JLabel scoreLabel;
    // End of variables declaration//GEN-END:variables
}
